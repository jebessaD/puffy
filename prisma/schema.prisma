generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id               Int         @id @default(autoincrement())
  name             String
  description      String
  price            Float
  discount         Float?
  stockQuantity    Int
  category         String?
  color            String[]    @default([])
  size             String[]    @default([])
  mainImage        String
  additionalImages String[]    @default([])
  averageRating    Float       @default(0)
  numReviews       Int         @default(0)
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
  orderItems       OrderItem[]
  reviews          Review[]
  isDeleted        Boolean     @default(false)
}

model Review {
  id        Int      @id @default(autoincrement())
  rating    Int
  comment   String
  productId Int
  createdAt DateTime @default(now())
  product   Product  @relation(fields: [productId], references: [id])
}

model ShippingAddress {
  id         String  @id @default(cuid())
  fullName   String
  email      String
  phone      String?
  address    String
  address2   String?
  city       String
  state      String?
  country    String
  postalCode String
  orders     Order[]
}

model Order {
  id                Int             @id @default(autoincrement())
  shippingAddressId String
  totalAmount       Float
  paymentStatus     PaymentStatus   @default(PENDING)
  orderStatus       OrderStatus     @default(PENDING)
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  shippingAddress   ShippingAddress @relation(fields: [shippingAddressId], references: [id])
  orderItems        OrderItem[]
  payment           Payment?
  trackingNumber    String?
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  price     Float
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
  color     String  @default("N/A")
  size      String  @default("N/A")
}

model Discount {
  id         Int      @id @default(autoincrement())
  code       String   @unique
  percentage Float
  validUntil DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Payment {
  id          Int           @id @default(autoincrement())
  orderId     Int           @unique
  status      PaymentStatus
  paymentDate DateTime      @default(now())
  amount      Float
  order       Order         @relation(fields: [orderId], references: [id])
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
}

enum PaymentStatus {
  PENDING
  PAID
  FAILED
  REFUNDED
}
